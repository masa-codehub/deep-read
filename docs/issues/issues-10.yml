github_issues:
  project_name: DeepRead
  version: 1.0
  date: 2025-05-03

  issues:
    - id: ISSUE-046
      title: "[UserStory] クロスドキュメントQA機能実装 (US-QA-002)"
      description: |
        ユーザーストーリー US-QA-002 を実装する。ライブラリ内の複数ドキュメントにまたがって質問への回答を生成する機能を提供する。
        > DeepReadのユーザ として、ライブラリ全体またはフォルダ/タグでフィルタしたドキュメント群に対して質問したい。それは、ドキュメントをまたいだ情報の関連性を把握するためだ。
      tasks:
        - "[ ] `AskLibraryQuestion` ユースケースの実装（複数ドキュメントからの検索と回答統合） (`layer:usecase`)"
        - "[ ] 複数ドキュメントからの検索制御（検索範囲、結果数制限等）実装 (`layer:usecase` -> `adapter-search`)"
        - "[ ] 回答統合時の情報ソース（ドキュメント名、ページ番号等）追跡実装 (`layer:usecase`)"
        - "[ ] ライブラリ画面に全体質問UI追加 (`layer:adapter-ui`)"
        - "[ ] 回答表示時の複数ドキュメントソース情報表示UI実装 (`layer:adapter-ui`)"
        - "[ ] （TDD）ユースケース、検索ロジックのテスト (`type:test`, `TDD`)"
      acceptance_criteria:
        - ユーザがライブラリ内の全ドキュメントまたは選択した複数ドキュメントに対して質問できること。
        - 回答に、情報源となった複数のドキュメント名とページ番号が表示されること。
        - 関連するテストが成功すること。
      related_requirements: [US-QA-002]
      dependencies: [ISSUE-019, ISSUE-023] # Depends on single document QA and RAG pipeline
      milestone: "Cross-Document QA" # Post-MVP feature
      labels: [type:user-story, feature:qa, layer:usecase, layer:adapter-ui, epic:EPIC-QA-CORE, priority:medium, TDD]
    - id: ISSUE-047
      title: "[UserStory] QA改善のためのバッチ処理実装 (US-IMPROVE-001)"
      description: |
        ユーザーストーリー US-IMPROVE-001 を実装する。ユーザ設定に基づいて、定期的にQ&A品質を改善するためのバッチ処理機能を実装する。
        > DeepReadの管理者として、過去のQ&Aデータを定期的に分析・改善したい。それは、将来の類似質問への回答品質を向上させるためだ。
      tasks:
        - "[ ] `ImproveQAData` ユースケースの実装 (`layer:usecase`)"
        - "[ ] Q&A改善に最適な対象を選択するロジック（頻出パターン、低評価回答等）実装 (`layer:usecase`)"
        - "[ ] 生成AI APIを利用した回答改善処理（要約、具体化、修正等）実装 (`layer:usecase` -> `adapter-ai`)"
        - "[ ] 改善されたQ&Aデータのベクトル埋め込み更新・DB保存処理 (`layer:usecase` -> `adapter-search`)"
        - "[ ] バッチ処理実行スケジュール設定UI実装 (`layer:adapter-ui`) - **Depends on: `US-SETTINGS-001`**"
        - "[ ] （TDD）ユースケース、改善ロジックのテスト (`type:test`, `TDD`)"
      acceptance_criteria:
        - 設定された頻度でQ&A改善バッチ処理が実行されること。
        - 過去のQ&A回答が適切に改善され、ベクトルDBが更新されること。
        - 改善処理の実行結果（処理数、成功/失敗等）がログ記録され、管理者が確認できること。
        - 関連するテストが成功すること。
      related_requirements: [US-IMPROVE-001]
      dependencies: [ISSUE-023, TASK-AI-03, US-SETTINGS-001, TASK-INFRA-02] # TASK-AI-03 is ISSUE-025, TASK-INFRA-02 is ISSUE-034
      milestone: "Feedback & Improvement Enhancements" # Post-MVP feature
      labels: [type:user-story, feature:feedback, layer:usecase, layer:adapter-ui, epic:EPIC-FEEDBACK-LOOP, priority:medium, TDD]
    - id: ISSUE-048
      title: "[UserStory] AIサービス設定実装 (US-SETTINGS-001)"
      description: |
        ユーザーストーリー US-SETTINGS-001 を実装する。ユーザによるAI設定（使用モデル、APIキー、パラメータ等）管理機能を提供する。
        > DeepReadのユーザとして、使用するAIモデルやキー、詳細設定を管理したい。それは、自分の好みや予算に合わせたAI連携を実現するためだ。
      tasks:
        - "[ ] `UserSettings` 集約への設定項目追加（AIサービス[Gemini/OpenAI等]、モデル選択、コンテキスト長等） (`layer:domain`)"
        - "[ ] `UpdateUserAISettings` ユースケースの実装 (`layer:usecase`)"
        - "[ ] APIキー保存ロジック実装（暗号化含む） (`layer:usecase`) - **Depends on: `TASK-SEC-002`**"
        - "[ ] 設定画面のUI実装（サービス選択、APIキー入力、モデルパラメータ設定等） (`layer:adapter-ui`)"
        - "[ ] （TDD）ドメインモデル、ユースケース、暗号化ロジックのテスト (`type:test`, `TDD`)"
      acceptance_criteria:
        - ユーザが使用するAIサービスとモデルを選択でき、必要なAPIキーを設定できること。
        - APIキーが安全に暗号化保存され、他のユーザに見られないこと。
        - 選択した設定が実際のAI API呼び出しに反映されること。
        - 関連するテストが成功すること。
      related_requirements: [US-SETTINGS-001]
      dependencies: [TASK-CONFIG-ARCH-01, TASK-SEC-002] # TASK-CONFIG-ARCH-01 is ISSUE-029, TASK-SEC-002 is ISSUE-042
      milestone: "MVP Foundation" # Important for enabling user's own API keys
      labels: [type:user-story, feature:settings, layer:domain, layer:usecase, layer:adapter-ui, epic:EPIC-SETTINGS, MVP, priority:high, TDD, DDD]
    - id: ISSUE-049
      title: "[UserStory] ドキュメント処理設定実装 (US-SETTINGS-002)"
      description: |
        ユーザーストーリー US-SETTINGS-002 を実装する。ドキュメント処理パイプライン設定（OCR品質、ページサイズ上限、ベクトル化パラメータ等）を管理する機能を提供する。
        > DeepReadの管理者として、ドキュメント処理方法の技術的パラメータを設定したい。それは、システムリソース消費と品質のバランスを最適化するためだ。
      tasks:
        - "[ ] `UserSettings` 集約への設定項目追加（OCR解像度、ベクトル埋め込み設定、チャンクサイズ等） (`layer:domain`)"
        - "[ ] `UpdateDocumentProcessSettings` ユースケースの実装 (`layer:usecase`)"
        - "[ ] 処理パイプラインでの設定値反映ロジック実装 (`layer:usecase`)"
        - "[ ] 設定画面のUI実装（管理者用高度設定セクション） (`layer:adapter-ui`)"
        - "[ ] （TDD）ドメインモデル、ユースケースのテスト (`type:test`, `TDD`)"
      acceptance_criteria:
        - 管理者がドキュメント処理に関する技術的パラメータを設定できること。
        - 設定値がドキュメント処理パイプライン（PDF画像化、テキスト抽出、チャンク分割、ベクトル化等）に反映されること。
        - 関連するテストが成功すること。
      related_requirements: [US-SETTINGS-002]
      dependencies: [TASK-CONFIG-ARCH-01, TASK-PIPE-01] # TASK-CONFIG-ARCH-01 is ISSUE-029, TASK-PIPE-01 is ISSUE-021
      milestone: "Settings Enhancements" # Post-MVP feature
      labels: [type:user-story, feature:settings, layer:domain, layer:usecase, layer:adapter-ui, epic:EPIC-SETTINGS, priority:medium, TDD, DDD]