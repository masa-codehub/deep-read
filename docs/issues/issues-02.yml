github_issues:
  project_name: DeepRead
  version: 1.0
  date: 2025-05-03

  issues:
    - id: ISSUE-006
      title: "[UserStory] パスワードリセット機能のバックエンド実装 (US-AUTH-003)"
      description: |
        ユーザーストーリー US-AUTH-003 のバックエンド処理を実装する。パスワードリセット要求を受け付け、トークンを生成し、メールを送信し、パスワードを更新する。
        > パスワードを忘れたユーザ として、メールで指示を受け取りパスワードを再設定したい。それは、アカウントへのアクセスを回復するためだ。
      tasks:
        - "[ ] パスワードリセットトークン生成・検証ロジック実装 (`layer:usecase`, `layer:domain`)"
        - "[ ] `RequestPasswordReset` ユースケース実装（メールアドレス検証、トークン生成、メール送信トリガー） (`layer:usecase`)"
        - "[ ] `ResetPassword` ユースケース実装（トークン検証、パスワード強度検証、パスワード更新） (`layer:usecase`)"
        - "[ ] リセットトークンの保存・管理（有効期限含む） (`layer:domain`, `layer:adapter-db`)"
        - "[ ] メール送信処理呼び出し (`layer:usecase` -> `adapter-notification`) - **Depends on: `TASK-INFRA-01`**"
        - "[ ] （TDD）関連ユースケース、ドメインロジックの単体テスト (`type:test`, `TDD`)"
      acceptance_criteria:
        - 登録済みメールアドレスに対しリセット要求があると、トークンが生成・保存され、メール送信がトリガーされること。
        - 有効なトークンと新しいパスワードでリセットを実行すると、パスワードが更新されること。
        - 無効なメールアドレス、期限切れ/無効トークン、弱いパスワードの場合はエラーとなること。
        - 関連する単体テストが成功すること。
      related_requirements: [US-AUTH-003]
      dependencies: [TASK-INFRA-01, TASK-AUTH-DB-ADAPTER, ISSUE-PWRESET-UI] # TASK-AUTH-DB-ADAPTER is likely ISSUE-002, ISSUE-PWRESET-UI is likely ISSUE-007
      milestone: "MVP Foundation" # Or subsequent
      labels: [type:user-story, feature:auth, layer:usecase, layer:domain, layer:adapter-db, layer:adapter-notification, epic:EPIC-FOUNDATION, priority:medium, TDD]
    - id: ISSUE-007
      title: "[UserStory] パスワードリセットUIの実装 (US-AUTH-003)"
      description: ユーザーストーリー US-AUTH-003 のためのUI（リクエスト画面、パスワード再設定画面）を実装する。
      tasks:
        - "[ ] パスワードリセット要求フォームUI作成 (`layer:adapter-ui`)"
        - "[ ] 新パスワード設定フォームUI作成 (`layer:adapter-ui`)"
        - "[ ] 各フォーム送信時に対応するバックエンド処理を呼び出す (`layer:adapter-ui`)"
        - "[ ] 結果に応じた画面表示（成功メッセージ、エラーメッセージ） (`layer:adapter-ui`)"
        - "[ ] （TDD）UIコンポーネントテスト（可能であれば） (`type:test`)"
      acceptance_criteria:
        - ユーザがメールアドレスを入力してリセット要求を送信できること。
        - ユーザがメールのリンクからパスワード再設定ページにアクセスし、新しいパスワードを設定できること。
        - 各ステップで適切なフィードバック（メール送信通知、成功、エラー）が表示されること。
      related_requirements: [US-AUTH-003]
      dependencies: [ISSUE-006] # Depends on backend implementation
      milestone: "MVP Foundation" # Or subsequent
      labels: [type:user-story, feature:auth, layer:adapter-ui, epic:EPIC-FOUNDATION, priority:medium]
    - id: ISSUE-008
      title: "[UserStory] 利用規約・プライバシーポリシー同意機能のバックエンド実装 (US-LEGAL-001)"
      description: |
        ユーザーストーリー US-LEGAL-001 のバックエンド処理を実装する。利用規約・ポリシーのバージョン管理とユーザの同意状況を記録・検証する。
        > DeepReadを利用するユーザ として、サービス利用前に利用規約とプライバシーポリシーを確認し、同意したい。それは、サービスの利用条件とデータの扱い（AI学習への不使用を含む）について理解し、納得して利用するためだ。
      tasks:
        - "[ ] 利用規約・ポリシーのバージョン管理方法定義（例: DBテーブル、設定ファイル） (`layer:domain`, `layer:infrastructure`)"
        - "[ ] `TermsAgreement` 値オブジェクト（またはエンティティ）の更新 (`layer:domain`)"
        - "[ ] ユーザ登録時およびログイン時に同意状況をチェックするロジック (`layer:usecase`)"
        - "[ ] 同意状況をDBに保存・更新する処理 (`layer:usecase` -> `adapter-db`)"
        - "[ ] （TDD）同意状況チェック、記録ロジックの単体テスト (`type:test`, `TDD`)"
      acceptance_criteria:
        - ユーザの最新の同意バージョンと日時がDBに記録されること。
        - 未同意または古いバージョンに同意しているユーザに対して、システムが適切にアクセス制御（または再同意要求）を行えること。
        - 関連する単体テストが成功すること。
      related_requirements: [US-LEGAL-001]
      dependencies: [US-AUTH-001, US-AUTH-002, TASK-LEGAL-01] # US-AUTH-001 is ISSUE-001, US-AUTH-002 is ISSUE-004, TASK-LEGAL-01 is ISSUE-031
      milestone: "MVP Foundation"
      labels: [type:user-story, feature:auth, layer:usecase, layer:domain, layer:adapter-db, epic:EPIC-FOUNDATION, MVP, priority:medium, TDD]
    - id: ISSUE-009
      title: "[UserStory] 利用規約・プライバシーポリシー同意UIの実装 (US-LEGAL-001)"
      description: ユーザーストーリー US-LEGAL-001 のためのUIを実装する。利用規約・ポリシーの表示、同意チェックボックス、および更新時の再同意要求を行う。
      tasks:
        - "[ ] サインアップ画面に規約リンクと同意チェックボックスを配置 (`layer:adapter-ui`)"
        - "[ ] ログイン時に未同意/更新がある場合に、規約表示と同意要求モーダル等を表示する処理 (`layer:adapter-ui`)"
        - "[ ] 同意アクション実行時にバックエンド処理を呼び出す (`layer:adapter-ui`)"
        - "[ ] （TDD）UIコンポーネントテスト（可能であれば） (`type:test`)"
      acceptance_criteria:
        - 新規登録時に同意チェックが必須となること。
        - 規約更新時にログインユーザに再同意が要求されること。
        - 同意後に通常利用が可能になること。
      related_requirements: [US-LEGAL-001]
      dependencies: [ISSUE-008] # Depends on backend implementation
      milestone: "MVP Foundation"
      labels: [type:user-story, feature:auth, layer:adapter-ui, epic:EPIC-FOUNDATION, MVP, priority:medium]
    - id: ISSUE-010
      title: "[UserStory] PDFアップロードUIの実装 (US-UPLOAD-001)"
      description: |
        ユーザーストーリー US-UPLOAD-001 のためのUIを実装する。
        > DeepReadのユーザ として、自分のコンピュータからPDFドキュメントをシステムに簡単に追加したい。それは、後でシステム上でその内容を活用するためだ。
      tasks:
        - "[ ] ライブラリ画面に「アップロード」ボタンを追加 (`layer:adapter-ui`)"
        - "[ ] ファイル選択ダイアログ表示とPDFファイル選択処理 (`layer:adapter-ui`)"
        - "[ ] ファイルサイズ等のクライアントサイドバリデーション（任意） (`layer:adapter-ui`)"
        - "[ ] 選択されたファイルをバックエンドAPIに送信する処理 (`layer:adapter-ui`)"
        - "[ ] アップロード中のプログレス表示 (`layer:adapter-ui`)"
        - "[ ] バックエンドからの応答（成功、エラー）に応じたUI表示 (`layer:adapter-ui`)"
      acceptance_criteria:
        - ユーザがアップロードボタンからPDFファイルを選択し、アップロードを実行できること。
        - アップロード中は進捗が表示されること。
        - ファイル制限を超える場合はエラーが表示されること。
        - アップロード成功後、処理開始がユーザに通知されること（例: ライブラリに「処理中」表示）。
      related_requirements: [US-UPLOAD-001]
      dependencies: [ISSUE-011] # Depends on backend endpoint
      milestone: "MVP Pipeline"
      labels: [type:user-story, feature:pipeline, layer:adapter-ui, epic:EPIC-PIPELINE, MVP, priority:medium]